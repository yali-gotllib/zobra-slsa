name: Container SLSA Build

on:
  push:
    tags:
      - 'container-v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to generate provenance for (e.g., container-v1.0.0)'
        required: true
        default: 'container-v1.0.0'
      registry:
        description: 'Container registry (ghcr.io, docker.io, etc.)'
        required: false
        default: 'ghcr.io'
        type: string
      dockerfile_path:
        description: 'Path to Dockerfile (default: ./Dockerfile)'
        required: false
        default: './Dockerfile'
        type: string
      build_context:
        description: 'Build context directory (default: .)'
        required: false
        default: '.'
        type: string

permissions: read-all

env:
  IMAGE_REGISTRY: ${{ github.event.inputs.registry || 'ghcr.io' }}
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # This step builds our image, pushes it, and outputs the repo hash digest.
  build:
    permissions:
      contents: read
      packages: write
    outputs:
      image: ${{ steps.image.outputs.image }}
      digest: ${{ steps.digest.outputs.digest }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Authenticate Docker
        uses: docker/login-action@v3
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: env.IMAGE_REGISTRY == 'ghcr.io'

      - name: Authenticate Docker (Docker Hub)
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: env.IMAGE_REGISTRY == 'docker.io' || env.IMAGE_REGISTRY == 'index.docker.io'

      - name: Authenticate Docker (Custom Registry)
        uses: docker/login-action@v3
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
        if: env.IMAGE_REGISTRY != 'ghcr.io' && env.IMAGE_REGISTRY != 'docker.io' && env.IMAGE_REGISTRY != 'index.docker.io'

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=raw,value=${{ github.event.inputs.tag }},enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        id: build
        with:
          context: ${{ github.event.inputs.build_context || '.' }}
          file: ${{ github.event.inputs.dockerfile_path || './Dockerfile' }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Install crane
        uses: imjasonh/setup-crane@v0.4

      - name: Get image digest
        id: digest
        run: |
          # Get the first tag from the metadata output
          tag=$(echo "${{ steps.meta.outputs.tags }}" | head -1)
          digest=$(crane digest "$tag")
          echo "digest=$digest" >> "$GITHUB_OUTPUT"

      - name: Output image
        id: image
        run: |
          # NOTE: Set the image as an output because the `env` context is not
          # available to the inputs of a reusable workflow call.
          image_name="${IMAGE_REGISTRY}/${IMAGE_NAME}"
          echo "image=$image_name" >> "$GITHUB_OUTPUT"

  # This step calls the container workflow to generate provenance and push it to
  # the container registry.
  provenance:
    needs: [build]
    permissions:
      actions: read # for detecting the Github Actions environment.
      id-token: write # for creating OIDC tokens for signing.
      packages: write # for uploading attestations.
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.1.0
    with:
      image: ${{ needs.build.outputs.image }}
      digest: ${{ needs.build.outputs.digest }}
      registry-username: ${{ github.actor }}
      private-repository: ${{ github.event.repository.private }}
    secrets:
      registry-password: ${{ secrets.GITHUB_TOKEN }}
